buildscript {
	ext {
		springBootVersion = '1.3.0.RELEASE'
	}
	repositories {
		jcenter()
		maven { url "https://repo.spring.io/release" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 

jar {
	baseName = 'ui'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	jcenter()
	maven { url "https://repo.spring.io/release" }
	maven { url "https://repo.spring.io/snapshot" }
}

dependencyManagement {
	imports { 
		mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.M3" 
	}
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-zuul')
	compile('org.springframework.cloud:spring-cloud-security')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-jetty')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.security:spring-security-jwt')
	compile('org.springframework.security.oauth:spring-security-oauth2')

	runtime('org.webjars:angularjs:1.4.7')
	runtime("org.webjars:angular-ui-bootstrap:0.14.3")
	runtime("org.webjars:bootstrap:3.3.5")
	runtime("org.webjars:jquery:2.1.4")
	runtime("org.webjars:webjars-locator")

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testRuntime('org.webhars:jasmine:2.0.0')
}

project.configurations {
	all*.exclude module: 'spring-boot-starter-tomcat'
}

eclipse {
	classpath {
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}
